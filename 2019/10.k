test:(".#..#"
      "....."
      "#####"
      "....#"
      "...##");

test2:("......#.#."
       "#..#.#...."
       "..#######."
       ".#.#.###.."
       ".#..#....."
       "..#....#.#"
       "#..#....#."
       ".##.#..###"
       "##...#..#."
       ".#....####");
test3:(".#..##.###...#######"
       "##.############..##."
       ".#.######.########.#"
       ".###.#######.####.#."
       "#####.##.#.##.###.##"
       "..#####..#.#########"
       "####################"
       "#.####....###.#.#.##"
       "##.#################"
       "#####.##.###..####.."
       "..######..##.#######"
       "####.##.####...##..#"
       ".#####..#.######.###"
       "##...#.##########..."
       "#.##########.#######"
       ".####.#.###.###.#.##"
       "....##.##.###..#####"
       ".#.#.###########.###"
       "#.#.#.#####.####.###"
       "###.##.####.##.#..##");

test4:(".#....#####...#.."
       "##...##.#####..##"
       "##...#...#.#####."
       "..#.....#...###.."
       "..#.#.....#....##");


signum:{(0<x)-(0>x)};
xy:{,/(&:'"#"=x),\:'!#x};
rho:{quad[x],(abs(%).|x)};
far:{sqrt +/(abs x) exp 2};
quad:(-1 -1;-1 0;-1 1;0 1;1 1;1 0;1 -1;0 -1)?signum';
sta:{*x@{&x=|/x}@{[x;y] #?rho'x-\:y}[x]'x};
p1:{#?rho'x-\:sta x:xy x};
p2:{ o+/:{x~Ã˜ Ã˜}_,/+@\:[;!100] 1_ | (!8) {[x;y] y @> (abs (%) ./: |:' y) ,' $[x>4;-1;1] * far'y }' . x@=quad'x:x-\:o:sta x:xy x}
